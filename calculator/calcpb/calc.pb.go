// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calcpb/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumResponse struct {
	SumResult            int32    `protobuf:"varint,1,opt,name=sum_result,json=sumResult,proto3" json:"sum_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetSumResult() int32 {
	if m != nil {
		return m.SumResult
	}
	return 0
}

type PrimeNoDecompRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNoDecompRequest) Reset()         { *m = PrimeNoDecompRequest{} }
func (m *PrimeNoDecompRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeNoDecompRequest) ProtoMessage()    {}
func (*PrimeNoDecompRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{2}
}

func (m *PrimeNoDecompRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNoDecompRequest.Unmarshal(m, b)
}
func (m *PrimeNoDecompRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNoDecompRequest.Marshal(b, m, deterministic)
}
func (m *PrimeNoDecompRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNoDecompRequest.Merge(m, src)
}
func (m *PrimeNoDecompRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeNoDecompRequest.Size(m)
}
func (m *PrimeNoDecompRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNoDecompRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNoDecompRequest proto.InternalMessageInfo

func (m *PrimeNoDecompRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNoDecompResponse struct {
	PrimeFactor          int64    `protobuf:"varint,1,opt,name=prime_factor,json=primeFactor,proto3" json:"prime_factor,omitempty"`
	Power                int64    `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNoDecompResponse) Reset()         { *m = PrimeNoDecompResponse{} }
func (m *PrimeNoDecompResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeNoDecompResponse) ProtoMessage()    {}
func (*PrimeNoDecompResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{3}
}

func (m *PrimeNoDecompResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNoDecompResponse.Unmarshal(m, b)
}
func (m *PrimeNoDecompResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNoDecompResponse.Marshal(b, m, deterministic)
}
func (m *PrimeNoDecompResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNoDecompResponse.Merge(m, src)
}
func (m *PrimeNoDecompResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeNoDecompResponse.Size(m)
}
func (m *PrimeNoDecompResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNoDecompResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNoDecompResponse proto.InternalMessageInfo

func (m *PrimeNoDecompResponse) GetPrimeFactor() int64 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

func (m *PrimeNoDecompResponse) GetPower() int64 {
	if m != nil {
		return m.Power
	}
	return 0
}

type ComputeAverageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAverageRequest) Reset()         { *m = ComputeAverageRequest{} }
func (m *ComputeAverageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeAverageRequest) ProtoMessage()    {}
func (*ComputeAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{4}
}

func (m *ComputeAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAverageRequest.Unmarshal(m, b)
}
func (m *ComputeAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAverageRequest.Marshal(b, m, deterministic)
}
func (m *ComputeAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAverageRequest.Merge(m, src)
}
func (m *ComputeAverageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeAverageRequest.Size(m)
}
func (m *ComputeAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAverageRequest proto.InternalMessageInfo

func (m *ComputeAverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputeAverageResponse struct {
	Average              float64  `protobuf:"fixed64,1,opt,name=average,proto3" json:"average,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAverageResponse) Reset()         { *m = ComputeAverageResponse{} }
func (m *ComputeAverageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeAverageResponse) ProtoMessage()    {}
func (*ComputeAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{5}
}

func (m *ComputeAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAverageResponse.Unmarshal(m, b)
}
func (m *ComputeAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAverageResponse.Marshal(b, m, deterministic)
}
func (m *ComputeAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAverageResponse.Merge(m, src)
}
func (m *ComputeAverageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputeAverageResponse.Size(m)
}
func (m *ComputeAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAverageResponse proto.InternalMessageInfo

func (m *ComputeAverageResponse) GetAverage() float64 {
	if m != nil {
		return m.Average
	}
	return 0
}

type ComputeMaxRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeMaxRequest) Reset()         { *m = ComputeMaxRequest{} }
func (m *ComputeMaxRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeMaxRequest) ProtoMessage()    {}
func (*ComputeMaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{6}
}

func (m *ComputeMaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeMaxRequest.Unmarshal(m, b)
}
func (m *ComputeMaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeMaxRequest.Marshal(b, m, deterministic)
}
func (m *ComputeMaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeMaxRequest.Merge(m, src)
}
func (m *ComputeMaxRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeMaxRequest.Size(m)
}
func (m *ComputeMaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeMaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeMaxRequest proto.InternalMessageInfo

func (m *ComputeMaxRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputeMaxResponse struct {
	Max                  int32    `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeMaxResponse) Reset()         { *m = ComputeMaxResponse{} }
func (m *ComputeMaxResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeMaxResponse) ProtoMessage()    {}
func (*ComputeMaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a87762106ce7f1ca, []int{7}
}

func (m *ComputeMaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeMaxResponse.Unmarshal(m, b)
}
func (m *ComputeMaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeMaxResponse.Marshal(b, m, deterministic)
}
func (m *ComputeMaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeMaxResponse.Merge(m, src)
}
func (m *ComputeMaxResponse) XXX_Size() int {
	return xxx_messageInfo_ComputeMaxResponse.Size(m)
}
func (m *ComputeMaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeMaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeMaxResponse proto.InternalMessageInfo

func (m *ComputeMaxResponse) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calc.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calc.SumResponse")
	proto.RegisterType((*PrimeNoDecompRequest)(nil), "calc.PrimeNoDecompRequest")
	proto.RegisterType((*PrimeNoDecompResponse)(nil), "calc.PrimeNoDecompResponse")
	proto.RegisterType((*ComputeAverageRequest)(nil), "calc.ComputeAverageRequest")
	proto.RegisterType((*ComputeAverageResponse)(nil), "calc.ComputeAverageResponse")
	proto.RegisterType((*ComputeMaxRequest)(nil), "calc.ComputeMaxRequest")
	proto.RegisterType((*ComputeMaxResponse)(nil), "calc.ComputeMaxResponse")
}

func init() { proto.RegisterFile("calcpb/calc.proto", fileDescriptor_a87762106ce7f1ca) }

var fileDescriptor_a87762106ce7f1ca = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x51, 0x4f, 0xf2, 0x30,
	0x14, 0xfd, 0xc6, 0x3e, 0x40, 0x2f, 0x60, 0xe0, 0x06, 0x90, 0x4c, 0x4d, 0x64, 0x26, 0x86, 0x44,
	0x02, 0x04, 0x7f, 0x81, 0xa2, 0x3e, 0x29, 0x92, 0xe1, 0x93, 0x2f, 0x64, 0xcc, 0x62, 0x48, 0x56,
	0x3a, 0xd7, 0x15, 0xf9, 0x33, 0xfe, 0x57, 0xb3, 0xb6, 0x73, 0x80, 0x4b, 0x7c, 0x6a, 0xef, 0xb9,
	0xe7, 0x9e, 0x9e, 0x9c, 0x5b, 0xa8, 0x79, 0xae, 0xef, 0x05, 0xf3, 0x7e, 0x7c, 0xf4, 0x82, 0x90,
	0x45, 0x0c, 0xff, 0xc7, 0x77, 0xfb, 0x05, 0x60, 0x2a, 0xa8, 0x43, 0x3e, 0x04, 0xe1, 0x11, 0xb6,
	0xa1, 0xbc, 0x58, 0x86, 0x3c, 0x9a, 0xad, 0x04, 0x9d, 0x93, 0xb0, 0x65, 0x9c, 0x1b, 0x9d, 0xbc,
	0x53, 0x92, 0xd8, 0x58, 0x42, 0x78, 0x01, 0x15, 0x4e, 0x3c, 0xb6, 0x7a, 0x4b, 0x38, 0x39, 0xc9,
	0x29, 0x2b, 0x50, 0x91, 0xec, 0x2e, 0x94, 0xa4, 0x2a, 0x0f, 0xd8, 0x8a, 0x13, 0x3c, 0x03, 0xe0,
	0x82, 0xce, 0x42, 0xc2, 0x85, 0x1f, 0x69, 0xd1, 0x43, 0x2e, 0x09, 0xc2, 0x8f, 0xec, 0x1e, 0xd4,
	0x27, 0xe1, 0x92, 0x92, 0x31, 0xbb, 0x23, 0x1e, 0xa3, 0x41, 0xe2, 0xa6, 0x09, 0x85, 0x2d, 0x1f,
	0xa6, 0xa3, 0x2b, 0x7b, 0x02, 0x8d, 0x3d, 0xbe, 0x7e, 0xa7, 0x0d, 0xe5, 0x20, 0x6e, 0xcc, 0x16,
	0xae, 0x17, 0xb1, 0x64, 0xac, 0x24, 0xb1, 0x07, 0x09, 0x61, 0x1d, 0xf2, 0x01, 0xfb, 0xd4, 0xb6,
	0x4d, 0x47, 0x15, 0x76, 0x1f, 0x1a, 0x23, 0x46, 0x03, 0x11, 0x91, 0x9b, 0x35, 0x09, 0xdd, 0x77,
	0x92, 0x6d, 0x21, 0xff, 0x63, 0x61, 0x08, 0xcd, 0xfd, 0x01, 0xed, 0xa1, 0x05, 0x45, 0x57, 0x41,
	0x72, 0xc4, 0x70, 0x92, 0xd2, 0xbe, 0x82, 0x9a, 0x9e, 0x79, 0x72, 0x37, 0x7f, 0x3d, 0x70, 0x09,
	0xb8, 0x4d, 0xd6, 0xe2, 0x55, 0x30, 0xa9, 0xbb, 0xd1, 0xd4, 0xf8, 0x3a, 0xfc, 0xca, 0x41, 0x71,
	0xe4, 0xfa, 0xde, 0x74, 0xed, 0x61, 0x17, 0xcc, 0xa9, 0xa0, 0x58, 0xed, 0xc9, 0x2d, 0xa7, 0x6b,
	0xb5, 0x6a, 0x5b, 0x88, 0x52, 0xb2, 0xff, 0xe1, 0x23, 0x54, 0x76, 0x52, 0x44, 0x4b, 0xb1, 0xb2,
	0x56, 0x61, 0x9d, 0x64, 0xf6, 0x12, 0xad, 0x81, 0x81, 0xcf, 0x70, 0xb4, 0x1b, 0x08, 0xea, 0x91,
	0xcc, 0x5c, 0xad, 0xd3, 0xec, 0x66, 0x22, 0xd8, 0x31, 0xf0, 0x1e, 0x20, 0x0d, 0x00, 0x8f, 0x77,
	0xf8, 0x69, 0x7e, 0x56, 0xeb, 0x77, 0x23, 0x15, 0x19, 0x18, 0xb7, 0x07, 0xaf, 0x05, 0xf5, 0xf5,
	0xe7, 0x05, 0xf9, 0xed, 0xaf, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xc3, 0x70, 0xb4, 0x0b,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalcSvcClient is the client API for CalcSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcSvcClient interface {
	//Unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	//Stream Server
	PrimeNoDecomp(ctx context.Context, in *PrimeNoDecompRequest, opts ...grpc.CallOption) (CalcSvc_PrimeNoDecompClient, error)
	//Stream Client
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (CalcSvc_ComputeAverageClient, error)
	//Bidi
	ComputeMax(ctx context.Context, opts ...grpc.CallOption) (CalcSvc_ComputeMaxClient, error)
}

type calcSvcClient struct {
	cc *grpc.ClientConn
}

func NewCalcSvcClient(cc *grpc.ClientConn) CalcSvcClient {
	return &calcSvcClient{cc}
}

func (c *calcSvcClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calc.CalcSvc/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcSvcClient) PrimeNoDecomp(ctx context.Context, in *PrimeNoDecompRequest, opts ...grpc.CallOption) (CalcSvc_PrimeNoDecompClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcSvc_serviceDesc.Streams[0], "/calc.CalcSvc/PrimeNoDecomp", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcSvcPrimeNoDecompClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalcSvc_PrimeNoDecompClient interface {
	Recv() (*PrimeNoDecompResponse, error)
	grpc.ClientStream
}

type calcSvcPrimeNoDecompClient struct {
	grpc.ClientStream
}

func (x *calcSvcPrimeNoDecompClient) Recv() (*PrimeNoDecompResponse, error) {
	m := new(PrimeNoDecompResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcSvcClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (CalcSvc_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcSvc_serviceDesc.Streams[1], "/calc.CalcSvc/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcSvcComputeAverageClient{stream}
	return x, nil
}

type CalcSvc_ComputeAverageClient interface {
	Send(*ComputeAverageRequest) error
	CloseAndRecv() (*ComputeAverageResponse, error)
	grpc.ClientStream
}

type calcSvcComputeAverageClient struct {
	grpc.ClientStream
}

func (x *calcSvcComputeAverageClient) Send(m *ComputeAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calcSvcComputeAverageClient) CloseAndRecv() (*ComputeAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputeAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcSvcClient) ComputeMax(ctx context.Context, opts ...grpc.CallOption) (CalcSvc_ComputeMaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcSvc_serviceDesc.Streams[2], "/calc.CalcSvc/ComputeMax", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcSvcComputeMaxClient{stream}
	return x, nil
}

type CalcSvc_ComputeMaxClient interface {
	Send(*ComputeMaxRequest) error
	Recv() (*ComputeMaxResponse, error)
	grpc.ClientStream
}

type calcSvcComputeMaxClient struct {
	grpc.ClientStream
}

func (x *calcSvcComputeMaxClient) Send(m *ComputeMaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calcSvcComputeMaxClient) Recv() (*ComputeMaxResponse, error) {
	m := new(ComputeMaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalcSvcServer is the server API for CalcSvc service.
type CalcSvcServer interface {
	//Unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	//Stream Server
	PrimeNoDecomp(*PrimeNoDecompRequest, CalcSvc_PrimeNoDecompServer) error
	//Stream Client
	ComputeAverage(CalcSvc_ComputeAverageServer) error
	//Bidi
	ComputeMax(CalcSvc_ComputeMaxServer) error
}

func RegisterCalcSvcServer(s *grpc.Server, srv CalcSvcServer) {
	s.RegisterService(&_CalcSvc_serviceDesc, srv)
}

func _CalcSvc_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcSvcServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.CalcSvc/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcSvcServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalcSvc_PrimeNoDecomp_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNoDecompRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalcSvcServer).PrimeNoDecomp(m, &calcSvcPrimeNoDecompServer{stream})
}

type CalcSvc_PrimeNoDecompServer interface {
	Send(*PrimeNoDecompResponse) error
	grpc.ServerStream
}

type calcSvcPrimeNoDecompServer struct {
	grpc.ServerStream
}

func (x *calcSvcPrimeNoDecompServer) Send(m *PrimeNoDecompResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalcSvc_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalcSvcServer).ComputeAverage(&calcSvcComputeAverageServer{stream})
}

type CalcSvc_ComputeAverageServer interface {
	SendAndClose(*ComputeAverageResponse) error
	Recv() (*ComputeAverageRequest, error)
	grpc.ServerStream
}

type calcSvcComputeAverageServer struct {
	grpc.ServerStream
}

func (x *calcSvcComputeAverageServer) SendAndClose(m *ComputeAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calcSvcComputeAverageServer) Recv() (*ComputeAverageRequest, error) {
	m := new(ComputeAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalcSvc_ComputeMax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalcSvcServer).ComputeMax(&calcSvcComputeMaxServer{stream})
}

type CalcSvc_ComputeMaxServer interface {
	Send(*ComputeMaxResponse) error
	Recv() (*ComputeMaxRequest, error)
	grpc.ServerStream
}

type calcSvcComputeMaxServer struct {
	grpc.ServerStream
}

func (x *calcSvcComputeMaxServer) Send(m *ComputeMaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calcSvcComputeMaxServer) Recv() (*ComputeMaxRequest, error) {
	m := new(ComputeMaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalcSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.CalcSvc",
	HandlerType: (*CalcSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalcSvc_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNoDecomp",
			Handler:       _CalcSvc_PrimeNoDecomp_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputeAverage",
			Handler:       _CalcSvc_ComputeAverage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ComputeMax",
			Handler:       _CalcSvc_ComputeMax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calcpb/calc.proto",
}
